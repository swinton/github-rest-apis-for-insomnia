{
  "_type": "export",
  "__export_format": 4,
  "__export_date": "2022-08-22T01:15:59.719Z",
  "__export_source": "github-rest-apis-for-insomnia:1.1.1",
  "resources": [
    {
      "parentId": "__WORKSPACE_ID__",
      "_id": "__FLD_49__",
      "_type": "request_group",
      "name": "GitHub v3 REST API",
      "environment": {
        "github_api_root": "{protocol}://{hostname}/api/v3",
        "access_token": "",
        "app_slug": "",
        "asset_id": 0,
        "assignee": "",
        "authorization_id": 0,
        "basehead": "",
        "branch": "",
        "build_id": 0,
        "card_id": 0,
        "check_run_id": 0,
        "check_suite_id": 0,
        "client_id": "",
        "code": "",
        "column_id": 0,
        "comment_id": 0,
        "comment_number": 0,
        "commit_sha": "",
        "content_reference_id": 0,
        "deployment_id": 0,
        "dir": "",
        "discussion_number": 0,
        "event_id": 0,
        "file_sha": "",
        "fingerprint": "",
        "gist_id": "",
        "gpg_key_id": 0,
        "grant_id": 0,
        "hook_id": 0,
        "installation_id": 0,
        "invitation_id": 0,
        "issue_number": 0,
        "key": "",
        "key_id": 0,
        "key_ids": "",
        "license": "",
        "milestone_number": 0,
        "name": "",
        "org": "",
        "owner": "",
        "path": "",
        "pre_receive_environment_id": 0,
        "pre_receive_hook_id": 0,
        "project_id": 0,
        "pull_number": 0,
        "reaction_id": 0,
        "ref": "",
        "release_id": 0,
        "repo": "",
        "repository_id": 0,
        "review_id": 0,
        "sha": "",
        "status_id": 0,
        "tag": "",
        "tag_sha": "",
        "target_user": "",
        "team_id": 0,
        "team_slug": "",
        "template_owner": "",
        "template_repo": "",
        "thread_id": 0,
        "token_id": 0,
        "tree_sha": "",
        "username": ""
      }
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_50__",
      "_type": "request_group",
      "name": "activity"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_51__",
      "_type": "request_group",
      "name": "apps"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_52__",
      "_type": "request_group",
      "name": "checks"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_53__",
      "_type": "request_group",
      "name": "codes-of-conduct"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_54__",
      "_type": "request_group",
      "name": "emojis"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_55__",
      "_type": "request_group",
      "name": "enterprise-admin"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_56__",
      "_type": "request_group",
      "name": "gists"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_57__",
      "_type": "request_group",
      "name": "git"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_58__",
      "_type": "request_group",
      "name": "gitignore"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_59__",
      "_type": "request_group",
      "name": "issues"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_60__",
      "_type": "request_group",
      "name": "licenses"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_61__",
      "_type": "request_group",
      "name": "markdown"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_62__",
      "_type": "request_group",
      "name": "meta"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_63__",
      "_type": "request_group",
      "name": "oauth-authorizations"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_64__",
      "_type": "request_group",
      "name": "orgs"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_65__",
      "_type": "request_group",
      "name": "projects"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_66__",
      "_type": "request_group",
      "name": "pulls"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_67__",
      "_type": "request_group",
      "name": "rate-limit"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_68__",
      "_type": "request_group",
      "name": "reactions"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_69__",
      "_type": "request_group",
      "name": "repos"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_70__",
      "_type": "request_group",
      "name": "search"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_71__",
      "_type": "request_group",
      "name": "teams"
    },
    {
      "parentId": "__FLD_49__",
      "_id": "__FLD_72__",
      "_type": "request_group",
      "name": "users"
    },
    {
      "parentId": "__FLD_62__",
      "_id": "__REQ_1075__",
      "_type": "request",
      "name": "GitHub API Root",
      "description": "Get Hypermedia links to resources accessible in GitHub's REST API\n\nhttps://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#root-endpoint",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1076__",
      "_type": "request",
      "name": "List global webhooks",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-global-webhooks",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.superpro-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/admin/hooks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1077__",
      "_type": "request",
      "name": "Create a global webhook",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-global-webhook",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.superpro-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/hooks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1078__",
      "_type": "request",
      "name": "Get a global webhook",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-global-webhook",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.superpro-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/admin/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1079__",
      "_type": "request",
      "name": "Update a global webhook",
      "description": "Parameters that are not provided will be overwritten with the default value or removed if no default exists.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-a-global-webhook",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.superpro-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/admin/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1080__",
      "_type": "request",
      "name": "Delete a global webhook",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-global-webhook",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.superpro-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/admin/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1081__",
      "_type": "request",
      "name": "Ping a global webhook",
      "description": "This will trigger a [ping event](https://docs.github.com/enterprise-server@2.18/webhooks/#ping-event) to be sent to the webhook.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#ping-a-global-webhook",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.superpro-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/hooks/{{ hook_id }}/pings",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1082__",
      "_type": "request",
      "name": "List public keys",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-public-keys",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/admin/keys",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1083__",
      "_type": "request",
      "name": "Delete a public key",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-public-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/admin/keys/{{ key_ids }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1084__",
      "_type": "request",
      "name": "Update LDAP mapping for a team",
      "description": "Updates the [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. [LDAP synchronization](https://help.github.com/enterprise/admin/guides/user-management/using-ldap/#enabling-ldap-sync) must be enabled to map LDAP entries to a team. Use the [Create a team](https://docs.github.com/enterprise-server@2.18/rest/reference/teams/#create-a-team) endpoint to create a team with LDAP mapping.\n\nIf you pass the `hellcat-preview` media type, you can also update the LDAP mapping of a child team.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/admin/ldap/teams/{{ team_id }}/mapping",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1085__",
      "_type": "request",
      "name": "Sync LDAP mapping for a team",
      "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/ldap/teams/{{ team_id }}/sync",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1086__",
      "_type": "request",
      "name": "Update LDAP mapping for a user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/admin/ldap/users/{{ username }}/mapping",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1087__",
      "_type": "request",
      "name": "Sync LDAP mapping for a user",
      "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/ldap/users/{{ username }}/sync",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1088__",
      "_type": "request",
      "name": "Create an organization",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/organizations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1089__",
      "_type": "request",
      "name": "Update an organization name",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-an-organization-name",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/admin/organizations/{{ org }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1090__",
      "_type": "request",
      "name": "List pre-receive environments",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-pre-receive-environments",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/admin/pre-receive-environments",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1091__",
      "_type": "request",
      "name": "Create a pre-receive environment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-pre-receive-environment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/pre-receive-environments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1092__",
      "_type": "request",
      "name": "Get a pre-receive environment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-pre-receive-environment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/admin/pre-receive-environments/{{ pre_receive_environment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1093__",
      "_type": "request",
      "name": "Update a pre-receive environment",
      "description": "You cannot modify the default environment. If you attempt to modify the default environment, you will receive a `422 Unprocessable Entity` response.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-a-pre-receive-environment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/admin/pre-receive-environments/{{ pre_receive_environment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1094__",
      "_type": "request",
      "name": "Delete a pre-receive environment",
      "description": "If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Cannot delete environment that has hooks_\n*   _Cannot delete environment when download is in progress_\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-pre-receive-environment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/admin/pre-receive-environments/{{ pre_receive_environment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1095__",
      "_type": "request",
      "name": "Start a pre-receive environment download",
      "description": "Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.\n\nIf a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n* _Cannot modify or delete the default environment_\n* _Can not start a new download when a download is in progress_\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#start-a-pre-receive-environment-download",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/pre-receive-environments/{{ pre_receive_environment_id }}/downloads",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1096__",
      "_type": "request",
      "name": "Get the download status for a pre-receive environment",
      "description": "In addition to seeing the download status at the \"[Get a pre-receive environment](#get-a-pre-receive-environment)\" endpoint, there is also this separate endpoint for just the download status.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-the-download-status-for-a-pre-receive-environment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/admin/pre-receive-environments/{{ pre_receive_environment_id }}/downloads/latest",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1097__",
      "_type": "request",
      "name": "List pre-receive hooks",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-pre-receive-hooks",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/admin/pre-receive-hooks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1098__",
      "_type": "request",
      "name": "Create a pre-receive hook",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-pre-receive-hook",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/pre-receive-hooks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1099__",
      "_type": "request",
      "name": "Get a pre-receive hook",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-pre-receive-hook",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/admin/pre-receive-hooks/{{ pre_receive_hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1100__",
      "_type": "request",
      "name": "Update a pre-receive hook",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-a-pre-receive-hook",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/admin/pre-receive-hooks/{{ pre_receive_hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1101__",
      "_type": "request",
      "name": "Delete a pre-receive hook",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-pre-receive-hook",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/admin/pre-receive-hooks/{{ pre_receive_hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1102__",
      "_type": "request",
      "name": "List personal access tokens",
      "description": "Lists personal access tokens for all users, including admin users.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-personal-access-tokens",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/admin/tokens",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1103__",
      "_type": "request",
      "name": "Delete a personal access token",
      "description": "Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-personal-access-token",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/admin/tokens/{{ token_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1104__",
      "_type": "request",
      "name": "Create a user",
      "description": "If an external authentication mechanism is used, the login name should match the login name in the external system. If you are using LDAP authentication, you should also [update the LDAP mapping](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user) for the user.\n\nThe login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send `\"octo_cat\"` as the login, a user named `\"octo-cat\"` will be created.\n\nIf the login name or email address is already associated with an account, the server will return a `422` response.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1105__",
      "_type": "request",
      "name": "Update the username for a user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-the-username-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/admin/users/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1106__",
      "_type": "request",
      "name": "Delete a user",
      "description": "Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#suspend-a-user) is often a better option.\n\nYou can delete any user account except your own.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/admin/users/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1107__",
      "_type": "request",
      "name": "Create an impersonation OAuth token",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-an-impersonation-oauth-token",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/admin/users/{{ username }}/authorizations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1108__",
      "_type": "request",
      "name": "Delete an impersonation OAuth token",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#delete-an-impersonation-oauth-token",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/admin/users/{{ username }}/authorizations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1109__",
      "_type": "request",
      "name": "Get the authenticated app",
      "description": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-the-authenticated-app",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/app",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1110__",
      "_type": "request",
      "name": "Create a GitHub App from a manifest",
      "description": "Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#create-a-github-app-from-a-manifest",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/app-manifests/{{ code }}/conversions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1111__",
      "_type": "request",
      "name": "List installations for the authenticated app",
      "description": "You must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-installations-for-the-authenticated-app",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/app/installations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1112__",
      "_type": "request",
      "name": "Get an installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-an-installation-for-the-authenticated-app",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/app/installations/{{ installation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1113__",
      "_type": "request",
      "name": "Delete an installation for the authenticated app",
      "description": "Uninstalls a GitHub App on a user, organization, or business account. You must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#delete-an-installation-for-the-authenticated-app",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.gambit-preview+json,application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/app/installations/{{ installation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1114__",
      "_type": "request",
      "name": "Create an installation access token for an app",
      "description": "Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps/#create-an-installation-access-token-for-an-app",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/app/installations/{{ installation_id }}/access_tokens",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1115__",
      "_type": "request",
      "name": "List your grants",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#list-your-grants",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/applications/grants",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "client_id",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1116__",
      "_type": "request",
      "name": "Get a single grant",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#get-a-single-grant",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/applications/grants/{{ grant_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1117__",
      "_type": "request",
      "name": "Delete a grant",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#delete-a-grant",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/applications/grants/{{ grant_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1118__",
      "_type": "request",
      "name": "Revoke a grant for an application",
      "description": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#revoke-a-grant-for-an-application",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/grants/{{ access_token }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1119__",
      "_type": "request",
      "name": "Check an authorization",
      "description": "OAuth applications can use a special API method for checking OAuth token validity without running afoul of normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#check-an-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/tokens/{{ access_token }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1120__",
      "_type": "request",
      "name": "Reset an authorization",
      "description": "OAuth applications can use this API method to reset a valid OAuth token without end user involvement. Applications must save the \"token\" property in the response, because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) when accessing it, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#reset-an-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/tokens/{{ access_token }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1121__",
      "_type": "request",
      "name": "Revoke an authorization for an application",
      "description": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) for this method, where the username is the OAuth application `client_id` and the password is its `client_secret`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#revoke-an-authorization-for-an-application",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/applications/{{ client_id }}/tokens/{{ access_token }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1122__",
      "_type": "request",
      "name": "Get an app",
      "description": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps/#get-an-app",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/apps/{{ app_slug }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1123__",
      "_type": "request",
      "name": "List your authorizations",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#list-your-authorizations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/authorizations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "client_id",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1124__",
      "_type": "request",
      "name": "Create a new authorization",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates OAuth tokens using [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub Enterprise Server from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#create-a-new-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/authorizations",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1125__",
      "_type": "request",
      "name": "Get-or-create an authorization for a specific app",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\n**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/authorizations/clients/{{ client_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1126__",
      "_type": "request",
      "name": "Get-or-create an authorization for a specific app and fingerprint",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub Enterprise Server SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub Enterprise Server SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nThis method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/authorizations/clients/{{ client_id }}/{{ fingerprint }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1127__",
      "_type": "request",
      "name": "Get a single authorization",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#get-a-single-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/authorizations/{{ authorization_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1128__",
      "_type": "request",
      "name": "Update an existing authorization",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#update-an-existing-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/authorizations/{{ authorization_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_63__",
      "_id": "__REQ_1129__",
      "_type": "request",
      "name": "Delete an authorization",
      "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/oauth-authorizations#delete-an-authorization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/authorizations/{{ authorization_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_53__",
      "_id": "__REQ_1130__",
      "_type": "request",
      "name": "Get all codes of conduct",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/codes-of-conduct#get-all-codes-of-conduct",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/codes_of_conduct",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_53__",
      "_id": "__REQ_1131__",
      "_type": "request",
      "name": "Get a code of conduct",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/codes-of-conduct#get-a-code-of-conduct",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/codes_of_conduct/{{ key }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_54__",
      "_id": "__REQ_1132__",
      "_type": "request",
      "name": "Get emojis",
      "description": "Lists all the emojis available to use on GitHub Enterprise Server.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/emojis#get-emojis",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/emojis",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1133__",
      "_type": "request",
      "name": "Get license information",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-license-information",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/settings/license",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1134__",
      "_type": "request",
      "name": "Get all statistics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/all",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1135__",
      "_type": "request",
      "name": "Get comment statistics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-comment-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1136__",
      "_type": "request",
      "name": "Get gist statistics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-gist-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/gists",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1137__",
      "_type": "request",
      "name": "Get hooks statistics",
      "description": "undefined\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-hooks-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/hooks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1138__",
      "_type": "request",
      "name": "Get issue statistics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-issues-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/issues",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1139__",
      "_type": "request",
      "name": "Get milestone statistics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-milestone-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/milestones",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1140__",
      "_type": "request",
      "name": "Get organization statistics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-organization-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/orgs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1141__",
      "_type": "request",
      "name": "Get pages statistics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-pages-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/pages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1142__",
      "_type": "request",
      "name": "Get pull request statistics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-pull-requests-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/pulls",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1143__",
      "_type": "request",
      "name": "Get repository statistics",
      "description": "undefined\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-repository-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/repos",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1144__",
      "_type": "request",
      "name": "Get users statistics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-users-statistics",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/enterprise/stats/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1145__",
      "_type": "request",
      "name": "List public events",
      "description": "We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-events",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1146__",
      "_type": "request",
      "name": "Get feeds",
      "description": "GitHub Enterprise Server provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub Enterprise Server global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-feeds",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/feeds",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1147__",
      "_type": "request",
      "name": "List gists for the authenticated user",
      "description": "Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gists-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1148__",
      "_type": "request",
      "name": "Create a gist",
      "description": "Allows you to add a new gist with one or more files.\n\n**Note:** Don't name your files \"gistfile\" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#create-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/gists",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1149__",
      "_type": "request",
      "name": "List public gists",
      "description": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-public-gists",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/public",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1150__",
      "_type": "request",
      "name": "List starred gists",
      "description": "List the authenticated user's starred gists:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-starred-gists",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/starred",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1151__",
      "_type": "request",
      "name": "Get a gist",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#get-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1152__",
      "_type": "request",
      "name": "Update a gist",
      "description": "Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists/#update-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1153__",
      "_type": "request",
      "name": "Delete a gist",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#delete-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1154__",
      "_type": "request",
      "name": "List gist comments",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gist-comments",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1155__",
      "_type": "request",
      "name": "Create a gist comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#create-a-gist-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1156__",
      "_type": "request",
      "name": "Get a gist comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#get-a-gist-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1157__",
      "_type": "request",
      "name": "Update a gist comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#update-a-gist-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1158__",
      "_type": "request",
      "name": "Delete a gist comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#delete-a-gist-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1159__",
      "_type": "request",
      "name": "List gist commits",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gist-commits",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/commits",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1160__",
      "_type": "request",
      "name": "List gist forks",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gist-forks",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/forks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1161__",
      "_type": "request",
      "name": "Fork a gist",
      "description": "**Note**: This was previously `/gists/:gist_id/fork`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#fork-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/forks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1162__",
      "_type": "request",
      "name": "Check if a gist is starred",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#check-if-a-gist-is-starred",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/star",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1163__",
      "_type": "request",
      "name": "Star a gist",
      "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#star-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/star",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1164__",
      "_type": "request",
      "name": "Unstar a gist",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#unstar-a-gist",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/star",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1165__",
      "_type": "request",
      "name": "Get a gist revision",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#get-a-gist-revision",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gists/{{ gist_id }}/{{ sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_58__",
      "_id": "__REQ_1166__",
      "_type": "request",
      "name": "Get all gitignore templates",
      "description": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-for-the-authenticated-user).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gitignore#get-all-gitignore-templates",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gitignore/templates",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_58__",
      "_id": "__REQ_1167__",
      "_type": "request",
      "name": "Get a gitignore template",
      "description": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) to get the raw contents.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gitignore#get-a-gitignore-template",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/gitignore/templates/{{ name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1168__",
      "_type": "request",
      "name": "List repositories accessible to the app installation",
      "description": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-repositories-accessible-to-the-app-installation",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json,application/vnd.github.mercy-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/installation/repositories",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1169__",
      "_type": "request",
      "name": "List issues assigned to the authenticated user",
      "description": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issues-assigned-to-the-authenticated-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/issues",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "assigned",
          "disabled": false
        },
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "labels",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "collab",
          "disabled": false
        },
        {
          "name": "orgs",
          "disabled": false
        },
        {
          "name": "owned",
          "disabled": false
        },
        {
          "name": "pulls",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_60__",
      "_id": "__REQ_1170__",
      "_type": "request",
      "name": "Get all commonly used licenses",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/licenses#get-all-commonly-used-licenses",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/licenses",
      "body": {},
      "parameters": [
        {
          "name": "featured",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_60__",
      "_id": "__REQ_1171__",
      "_type": "request",
      "name": "Get a license",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/licenses#get-a-license",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/licenses/{{ license }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_61__",
      "_id": "__REQ_1172__",
      "_type": "request",
      "name": "Render a Markdown document",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/markdown#render-a-markdown-document",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/markdown",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_61__",
      "_id": "__REQ_1173__",
      "_type": "request",
      "name": "Render a Markdown document in raw mode",
      "description": "You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoint, rather than using JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/) is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/markdown#render-a-markdown-document-in-raw-mode",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/markdown/raw",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_62__",
      "_id": "__REQ_1174__",
      "_type": "request",
      "name": "Get GitHub Enterprise Server meta information",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/meta#get-github-meta-information",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/meta",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1175__",
      "_type": "request",
      "name": "List public events for a network of repositories",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-events-for-a-network-of-repositories",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/networks/{{ owner }}/{{ repo }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1176__",
      "_type": "request",
      "name": "List notifications for the authenticated user",
      "description": "List all notifications for the current user, sorted by most recently updated.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-notifications-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/notifications",
      "body": {},
      "parameters": [
        {
          "name": "all",
          "value": false,
          "disabled": false
        },
        {
          "name": "participating",
          "value": false,
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "before",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1177__",
      "_type": "request",
      "name": "Mark notifications as read",
      "description": "Marks all notifications as \"read\" removes it from the [default view on GitHub Enterprise Server](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub Enterprise Server will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List notifications for the authenticated user](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#mark-notifications-as-read",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/notifications",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1178__",
      "_type": "request",
      "name": "Get a thread",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-a-thread",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1179__",
      "_type": "request",
      "name": "Mark a thread as read",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#mark-a-thread-as-read",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1180__",
      "_type": "request",
      "name": "Get a thread subscription for the authenticated user",
      "description": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-a-thread-subscription-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1181__",
      "_type": "request",
      "name": "Set a thread subscription",
      "description": "If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an **@mention**.\n\nYou can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.\n\nUnsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-thread-subscription) endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-thread-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1182__",
      "_type": "request",
      "name": "Delete a thread subscription",
      "description": "Mutes all future notifications for a conversation until you comment on the thread or get an **@mention**. If you are watching the repository of the thread, you will still receive notifications. To ignore future notifications for a repository you are watching, use the [Set a thread subscription](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-thread-subscription) endpoint and set `ignore` to `true`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-thread-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/notifications/threads/{{ thread_id }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_62__",
      "_id": "__REQ_1183__",
      "_type": "request",
      "name": "Get Octocat",
      "description": "Get the octocat as ASCII art\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/meta#get-octocat",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/octocat",
      "body": {},
      "parameters": [
        {
          "name": "s",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1184__",
      "_type": "request",
      "name": "List organizations",
      "description": "Lists all organizations, in the order that they were created on GitHub Enterprise Server.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organizations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/organizations",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1185__",
      "_type": "request",
      "name": "Get an organization",
      "description": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub Enterprise Server plan information' below.\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-an-organization",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.surtur-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1186__",
      "_type": "request",
      "name": "Update an organization",
      "description": "**Parameter Deprecation Notice:** GitHub Enterprise Server will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).\n\nEnables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs/#update-an-organization",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.surtur-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1187__",
      "_type": "request",
      "name": "List public organization events",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-organization-events",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1188__",
      "_type": "request",
      "name": "List organization webhooks",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organization-webhooks",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1189__",
      "_type": "request",
      "name": "Create an organization webhook",
      "description": "Here's how you can create a hook that posts payloads in JSON format:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#create-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1190__",
      "_type": "request",
      "name": "Get an organization webhook",
      "description": "Returns a webhook configured in an organization. To get only the webhook `config` properties, see \"[Get a webhook configuration for an organization](/rest/reference/orgs#get-a-webhook-configuration-for-an-organization).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1191__",
      "_type": "request",
      "name": "Update an organization webhook",
      "description": "Updates a webhook configured in an organization. When you update a webhook, the `secret` will be overwritten. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for an organization](/rest/reference/orgs#update-a-webhook-configuration-for-an-organization).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#update-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1192__",
      "_type": "request",
      "name": "Delete an organization webhook",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#delete-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1193__",
      "_type": "request",
      "name": "Ping an organization webhook",
      "description": "This will trigger a [ping event](https://docs.github.com/enterprise-server@2.18/webhooks/#ping-event) to be sent to the hook.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#ping-an-organization-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/hooks/{{ hook_id }}/pings",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1194__",
      "_type": "request",
      "name": "Get an organization installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-an-organization-installation-for-the-authenticated-app",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/installation",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1195__",
      "_type": "request",
      "name": "List organization issues assigned to the authenticated user",
      "description": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-organization-issues-assigned-to-the-authenticated-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/issues",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "assigned",
          "disabled": false
        },
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "labels",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1196__",
      "_type": "request",
      "name": "List organization members",
      "description": "List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organization-members",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/members",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "all",
          "disabled": false
        },
        {
          "name": "role",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1197__",
      "_type": "request",
      "name": "Check organization membership for a user",
      "description": "Check if a user is, publicly or privately, a member of the organization.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#check-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1198__",
      "_type": "request",
      "name": "Remove an organization member",
      "description": "Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#remove-an-organization-member",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1199__",
      "_type": "request",
      "name": "Get organization membership for a user",
      "description": "In order to get a user's membership with an organization, the authenticated user must be an organization member. The `state` parameter in the response can be used to identify the user's membership status.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1200__",
      "_type": "request",
      "name": "Set organization membership for a user",
      "description": "Only authenticated organization owners can add a member to the organization or update the member's role.\n\n*   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-organization-membership-for-a-user) will be `pending` until they accept the invitation.\n    \n*   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.\n\n**Rate limits**\n\nTo prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#set-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1201__",
      "_type": "request",
      "name": "Remove organization membership for a user",
      "description": "In order to remove a user's membership with an organization, the authenticated user must be an organization owner.\n\nIf the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#remove-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1202__",
      "_type": "request",
      "name": "List outside collaborators for an organization",
      "description": "List all users who are outside collaborators of an organization.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-outside-collaborators-for-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/outside_collaborators",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1203__",
      "_type": "request",
      "name": "Convert an organization member to outside collaborator",
      "description": "When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\".\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#convert-an-organization-member-to-outside-collaborator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/outside_collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1204__",
      "_type": "request",
      "name": "Remove outside collaborator from an organization",
      "description": "Removing a user from this list will remove them from all the organization's repositories.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#remove-outside-collaborator-from-an-organization",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/outside_collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1205__",
      "_type": "request",
      "name": "List pre-receive hooks for an organization",
      "description": "List all pre-receive hooks that are enabled or testing for this organization as well as any disabled hooks that can be configured at the organization level. Globally disabled pre-receive hooks that do not allow downstream configuration are not listed.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-pre-receive-hooks-for-an-organization",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/pre-receive-hooks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1206__",
      "_type": "request",
      "name": "Get a pre-receive hook for an organization",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-an-organization",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/pre-receive-hooks/{{ pre_receive_hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1207__",
      "_type": "request",
      "name": "Update pre-receive hook enforcement for an organization",
      "description": "For pre-receive hooks which are allowed to be configured at the org level, you can set `enforcement` and `allow_downstream_configuration`\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-an-organization",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/orgs/{{ org }}/pre-receive-hooks/{{ pre_receive_hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1208__",
      "_type": "request",
      "name": "Remove pre-receive hook enforcement for an organization",
      "description": "Removes any overrides for this hook at the org level for this org.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-an-organization",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/pre-receive-hooks/{{ pre_receive_hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1209__",
      "_type": "request",
      "name": "List organization projects",
      "description": "Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-organization-projects",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/projects",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1210__",
      "_type": "request",
      "name": "Create an organization project",
      "description": "Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-an-organization-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/projects",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1211__",
      "_type": "request",
      "name": "List public organization members",
      "description": "Members of an organization can choose to have their membership publicized or not.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-public-organization-members",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/public_members",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1212__",
      "_type": "request",
      "name": "Check public organization membership for a user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#check-public-organization-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/public_members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1213__",
      "_type": "request",
      "name": "Set public organization membership for the authenticated user",
      "description": "The user can publicize their own membership. (A user cannot publicize the membership for another user.)\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#set-public-organization-membership-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/orgs/{{ org }}/public_members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1214__",
      "_type": "request",
      "name": "Remove public organization membership for the authenticated user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#remove-public-organization-membership-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/orgs/{{ org }}/public_members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1215__",
      "_type": "request",
      "name": "List organization repositories",
      "description": "Lists repositories for the specified organization.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-organization-repositories",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json,application/vnd.github.baptiste-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/repos",
      "body": {},
      "parameters": [
        {
          "name": "type",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1216__",
      "_type": "request",
      "name": "Create an organization repository",
      "description": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n*   `repo` scope to create a private repository\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-an-organization-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json,application/vnd.github.baptiste-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/repos",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1217__",
      "_type": "request",
      "name": "List teams",
      "description": "Lists all teams in an organization that are visible to the authenticated user.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-teams",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1218__",
      "_type": "request",
      "name": "Create a team",
      "description": "To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"[Setting team creation permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization).\"\n\nWhen you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see \"[About teams](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)\".\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#create-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1219__",
      "_type": "request",
      "name": "Get a team by name",
      "description": "Gets a team using the team's `slug`. GitHub Enterprise Server generates the `slug` from the team `name`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-a-team-by-name",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/orgs/{{ org }}/teams/{{ team_slug }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1220__",
      "_type": "request",
      "name": "Get a project card",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#get-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/columns/cards/{{ card_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1221__",
      "_type": "request",
      "name": "Update an existing project card",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#update-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/projects/columns/cards/{{ card_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1222__",
      "_type": "request",
      "name": "Delete a project card",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#delete-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/projects/columns/cards/{{ card_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1223__",
      "_type": "request",
      "name": "Move a project card",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#move-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/projects/columns/cards/{{ card_id }}/moves",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1224__",
      "_type": "request",
      "name": "Get a project column",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#get-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1225__",
      "_type": "request",
      "name": "Update an existing project column",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#update-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1226__",
      "_type": "request",
      "name": "Delete a project column",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#delete-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1227__",
      "_type": "request",
      "name": "List project cards",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-project-cards",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}/cards",
      "body": {},
      "parameters": [
        {
          "name": "archived_state",
          "value": "not_archived",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1228__",
      "_type": "request",
      "name": "Create a project card",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-a-project-card",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}/cards",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1229__",
      "_type": "request",
      "name": "Move a project column",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#move-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/projects/columns/{{ column_id }}/moves",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1230__",
      "_type": "request",
      "name": "Get a project",
      "description": "Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#get-a-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1231__",
      "_type": "request",
      "name": "Update a project",
      "description": "Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#update-a-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1232__",
      "_type": "request",
      "name": "Delete a project",
      "description": "Deletes a project board. Returns a `404 Not Found` status if projects are disabled.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#delete-a-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1233__",
      "_type": "request",
      "name": "List project collaborators",
      "description": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-project-collaborators",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/collaborators",
      "body": {},
      "parameters": [
        {
          "name": "affiliation",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1234__",
      "_type": "request",
      "name": "Add project collaborator",
      "description": "Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#add-project-collaborator",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1235__",
      "_type": "request",
      "name": "Remove user as a collaborator",
      "description": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#remove-project-collaborator",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1236__",
      "_type": "request",
      "name": "Get project permission for a user",
      "description": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user's permission level.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#get-project-permission-for-a-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/collaborators/{{ username }}/permission",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1237__",
      "_type": "request",
      "name": "List project columns",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-project-columns",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/columns",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1238__",
      "_type": "request",
      "name": "Create a project column",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-a-project-column",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/projects/{{ project_id }}/columns",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_67__",
      "_id": "__REQ_1239__",
      "_type": "request",
      "name": "Get rate limit status for the authenticated user",
      "description": "**Note:** Accessing this endpoint does not count against your REST API rate limit.\n\n**Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/rate-limit#get-rate-limit-status-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/rate_limit",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1240__",
      "_type": "request",
      "name": "Delete a reaction",
      "description": "OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussions) or [team discussion comment](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussion-comments).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions#delete-a-reaction-legacy",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/reactions/{{ reaction_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1241__",
      "_type": "request",
      "name": "Get a repository",
      "description": "When you pass the `scarlet-witch-preview` media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file.\n\nThe `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json,application/vnd.github.scarlet-witch-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1242__",
      "_type": "request",
      "name": "Update a repository",
      "description": "**Note**: To edit a repository's topics, use the [Replace all repository topics](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#replace-all-repository-topics) endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos/#update-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json,application/vnd.github.baptiste-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1243__",
      "_type": "request",
      "name": "Delete a repository",
      "description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\nIf an organization owner has configured the organization to prevent members from deleting organization-owned\nrepositories, you will get a `403 Forbidden` response.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1244__",
      "_type": "request",
      "name": "List assignees",
      "description": "Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-assignees",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/assignees",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1245__",
      "_type": "request",
      "name": "Check if a user can be assigned",
      "description": "Checks if a user has permission to be assigned to an issue in this repository.\n\nIf the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\nOtherwise a `404` status code is returned.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#check-if-a-user-can-be-assigned",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/assignees/{{ assignee }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1246__",
      "_type": "request",
      "name": "List branches",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-branches",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches",
      "body": {},
      "parameters": [
        {
          "name": "protected",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1247__",
      "_type": "request",
      "name": "Get a branch",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1248__",
      "_type": "request",
      "name": "Get branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-branch-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.luke-cage-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1249__",
      "_type": "request",
      "name": "Update branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nProtecting a branch requires admin or owner permissions to the repository.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n**Note**: The list of users, apps, and teams in total is limited to 100 items.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-branch-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.luke-cage-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1250__",
      "_type": "request",
      "name": "Delete branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-branch-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1251__",
      "_type": "request",
      "name": "Get admin branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-admin-branch-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/enforce_admins",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1252__",
      "_type": "request",
      "name": "Set admin branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nAdding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#set-admin-branch-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/enforce_admins",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1253__",
      "_type": "request",
      "name": "Delete admin branch protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoving admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-admin-branch-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/enforce_admins",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1254__",
      "_type": "request",
      "name": "Get pull request review protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-pull-request-review-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.luke-cage-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_pull_request_reviews",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1255__",
      "_type": "request",
      "name": "Update pull request review protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-pull-request-review-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.luke-cage-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_pull_request_reviews",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1256__",
      "_type": "request",
      "name": "Delete pull request review protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-pull-request-review-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_pull_request_reviews",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1257__",
      "_type": "request",
      "name": "Get commit signature protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-commit-signature-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.zzzax-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_signatures",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1258__",
      "_type": "request",
      "name": "Create commit signature protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-commit-signature-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.zzzax-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_signatures",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1259__",
      "_type": "request",
      "name": "Delete commit signature protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-commit-signature-protection",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.zzzax-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_signatures",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1260__",
      "_type": "request",
      "name": "Get status checks protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-status-checks-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1261__",
      "_type": "request",
      "name": "Update status check protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-status-check-potection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1262__",
      "_type": "request",
      "name": "Remove status check protection",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-status-check-protection",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1263__",
      "_type": "request",
      "name": "Get all status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-all-status-check-contexts",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks/contexts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1264__",
      "_type": "request",
      "name": "Add status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#add-status-check-contexts",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks/contexts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1265__",
      "_type": "request",
      "name": "Set status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#set-status-check-contexts",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks/contexts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1266__",
      "_type": "request",
      "name": "Remove status check contexts",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-status-check-contexts",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/required_status_checks/contexts",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1267__",
      "_type": "request",
      "name": "Get access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists who has access to this protected branch.\n\n**Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1268__",
      "_type": "request",
      "name": "Delete access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nDisables the ability to restrict who can push to this branch.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1269__",
      "_type": "request",
      "name": "Get teams with access to the protected branch",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the teams who have push access to this branch. The list includes child teams.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-teams-with-access-to-the-protected-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1270__",
      "_type": "request",
      "name": "Add team access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified teams push access for this branch. You can also give push access to child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#add-team-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1271__",
      "_type": "request",
      "name": "Set team access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#set-team-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1272__",
      "_type": "request",
      "name": "Remove team access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch. You can also remove push access for child teams.\n\n| Type    | Description                                                                                                                                         |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-team-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/teams",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1273__",
      "_type": "request",
      "name": "Get users with access to the protected branch",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the people who have push access to this branch.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-users-with-access-to-the-protected-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1274__",
      "_type": "request",
      "name": "Add user access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified people push access for this branch.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#add-user-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1275__",
      "_type": "request",
      "name": "Set user access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#set-user-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1276__",
      "_type": "request",
      "name": "Remove user access restrictions",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a user to push to this branch.\n\n| Type    | Description                                                                                                                                   |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-user-access-restrictions",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/branches/{{ branch }}/protection/restrictions/users",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1277__",
      "_type": "request",
      "name": "Create a check run",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nCreates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.\n\nIn a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#create-a-check-run",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-runs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1278__",
      "_type": "request",
      "name": "Get a check run",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nGets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#get-a-check-run",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-runs/{{ check_run_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1279__",
      "_type": "request",
      "name": "Update a check run",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nUpdates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-a-check-run",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-runs/{{ check_run_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1280__",
      "_type": "request",
      "name": "List check run annotations",
      "description": "Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#list-check-run-annotations",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-runs/{{ check_run_id }}/annotations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1281__",
      "_type": "request",
      "name": "Create a check suite",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nBy default, check suites are automatically created when you create a [check run](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#check-runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Update repository preferences for check suites](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-repository-preferences-for-check-suites)\". Your GitHub App must have the `checks:write` permission to create check suites.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#create-a-check-suite",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1282__",
      "_type": "request",
      "name": "Update repository preferences for check suites",
      "description": "Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/enterprise-server@2.18/rest/reference/checks#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#update-repository-preferences-for-check-suites",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites/preferences",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1283__",
      "_type": "request",
      "name": "Get a check suite",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nGets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#get-a-check-suite",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites/{{ check_suite_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1284__",
      "_type": "request",
      "name": "List check runs in a check suite",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#list-check-runs-in-a-check-suite",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites/{{ check_suite_id }}/check-runs",
      "body": {},
      "parameters": [
        {
          "name": "check_name",
          "disabled": false
        },
        {
          "name": "status",
          "disabled": false
        },
        {
          "name": "filter",
          "value": "latest",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1285__",
      "_type": "request",
      "name": "Rerequest a check suite",
      "description": "Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#check_suite) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\nTo rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#rerequest-a-check-suite",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/check-suites/{{ check_suite_id }}/rerequest",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1286__",
      "_type": "request",
      "name": "List repository collaborators",
      "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-collaborators",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators",
      "body": {},
      "parameters": [
        {
          "name": "affiliation",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1287__",
      "_type": "request",
      "name": "Check if a user is a repository collaborator",
      "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#check-if-a-user-is-a-repository-collaborator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1288__",
      "_type": "request",
      "name": "Add a repository collaborator",
      "description": "This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\nFor more information the permission levels, see \"[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\".\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nThe invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#invitations).\n\n**Rate limits**\n\nYou are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#add-a-repository-collaborator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1289__",
      "_type": "request",
      "name": "Remove a repository collaborator",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#remove-a-repository-collaborator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1290__",
      "_type": "request",
      "name": "Get repository permissions for a user",
      "description": "Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-repository-permissions-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/collaborators/{{ username }}/permission",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1291__",
      "_type": "request",
      "name": "List commit comments for a repository",
      "description": "Commit Comments use [these custom media types](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/).\n\nComments are ordered by ascending ID.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commit-comments-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1292__",
      "_type": "request",
      "name": "Get a commit comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-commit-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1293__",
      "_type": "request",
      "name": "Update a commit comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-commit-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1294__",
      "_type": "request",
      "name": "Delete a commit comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-commit-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1295__",
      "_type": "request",
      "name": "List reactions for a commit comment",
      "description": "List the reactions to a [commit comment](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#comments).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions#list-reactions-for-a-commit-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1296__",
      "_type": "request",
      "name": "Create reaction for a commit comment",
      "description": "Create a reaction to a [commit comment](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#comments). A response with an HTTP `200` status means that you already added the reaction type to this commit comment.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions#create-reaction-for-a-commit-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1297__",
      "_type": "request",
      "name": "List commits",
      "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits",
      "body": {},
      "parameters": [
        {
          "name": "sha",
          "disabled": false
        },
        {
          "name": "path",
          "disabled": false
        },
        {
          "name": "author",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "until",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1298__",
      "_type": "request",
      "name": "List branches for HEAD commit",
      "description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReturns all branches where the given commit SHA is the HEAD, or latest commit for the branch.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-branches-for-head-commit",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.groot-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ commit_sha }}/branches-where-head",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1299__",
      "_type": "request",
      "name": "List commit comments",
      "description": "Use the `:commit_sha` to specify the commit that will have its comments listed.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commit-comments",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ commit_sha }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1300__",
      "_type": "request",
      "name": "Create a commit comment",
      "description": "Create a comment for a commit using its `:commit_sha`.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-commit-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ commit_sha }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1301__",
      "_type": "request",
      "name": "List pull requests associated with a commit",
      "description": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests) endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-pull-requests-associated-with-a-commit",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.groot-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ commit_sha }}/pulls",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1302__",
      "_type": "request",
      "name": "Get a commit",
      "description": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-commit",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}",
      "body": {},
      "parameters": [
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1303__",
      "_type": "request",
      "name": "List check runs for a Git reference",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#list-check-runs-for-a-git-reference",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}/check-runs",
      "body": {},
      "parameters": [
        {
          "name": "check_name",
          "disabled": false
        },
        {
          "name": "status",
          "disabled": false
        },
        {
          "name": "filter",
          "value": "latest",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "app_id",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_52__",
      "_id": "__REQ_1304__",
      "_type": "request",
      "name": "List check suites for a Git reference",
      "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nLists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/checks#list-check-suites-for-a-git-reference",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.antiope-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}/check-suites",
      "body": {},
      "parameters": [
        {
          "name": "app_id",
          "disabled": false
        },
        {
          "name": "check_name",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1305__",
      "_type": "request",
      "name": "Get the combined status for a specific reference",
      "description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-combined-status-for-a-specific-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}/status",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1306__",
      "_type": "request",
      "name": "List commit statuses for a reference",
      "description": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commit-statuses-for-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/commits/{{ ref }}/statuses",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1307__",
      "_type": "request",
      "name": "Compare two commits",
      "description": "The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#compare-two-commits",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/compare/{{ basehead }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1308__",
      "_type": "request",
      "name": "Create a content attachment",
      "description": "Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` and `repository` `full_name` of the content reference from the [`content_reference` event](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#content_reference) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://docs.github.com/enterprise-server@2.18/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#create-a-content-attachment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.corsair-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/content_references/{{ content_reference_id }}/attachments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1309__",
      "_type": "request",
      "name": "Get repository content",
      "description": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\nFiles and symlinks support [a custom media type](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/enterprise-server@2.18/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-repository-content",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/contents/{{ path }}",
      "body": {},
      "parameters": [
        {
          "name": "ref",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1310__",
      "_type": "request",
      "name": "Create or update file contents",
      "description": "Creates a new file or replaces an existing file in a repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-or-update-file-contents",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/contents/{{ path }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1311__",
      "_type": "request",
      "name": "Delete a file",
      "description": "Deletes a file in a repository.\n\nYou can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.\n\nThe `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\nYou must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-file",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/contents/{{ path }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1312__",
      "_type": "request",
      "name": "List repository contributors",
      "description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-contributors",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/contributors",
      "body": {},
      "parameters": [
        {
          "name": "anon",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1313__",
      "_type": "request",
      "name": "List deployments",
      "description": "Simple filtering of deployments is available via query parameters:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-deployments",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments",
      "body": {},
      "parameters": [
        {
          "name": "sha",
          "value": "none",
          "disabled": false
        },
        {
          "name": "ref",
          "value": "none",
          "disabled": false
        },
        {
          "name": "task",
          "value": "none",
          "disabled": false
        },
        {
          "name": "environment",
          "value": "none",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1314__",
      "_type": "request",
      "name": "Create a deployment",
      "description": "Deployments offer a few configurable parameters with certain defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub Enterprise Server we often deploy branches and verify them\nbefore we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have\nmultiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter\nmakes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If\nthe ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,\nthe API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will\nreturn a failure response.\n\nBy default, [commit statuses](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#statuses) for every submitted context must be in a `success`\nstate. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to\nspecify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do\nnot require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text\nfield that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might\nbe `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an\napplication with debugging enabled.\n\nUsers with `repo` or `repo_deployment` scopes can create a deployment for a given ref.\n\n#### Merged branch response\nYou will see this response when GitHub automatically merges the base branch into the topic branch instead of creating\na deployment. This auto-merge happens when:\n*   Auto-merge option is enabled in the repository\n*   Topic branch does not include the latest changes on the base branch, which is `master` in the response example\n*   There are no merge conflicts\n\nIf there are no new commits in the base branch, a new request to create a deployment should give a successful\nresponse.\n\n#### Merge conflict response\nThis error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't\nbe merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\n#### Failed commit status checks\nThis error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`\nstatus for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-deployment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1315__",
      "_type": "request",
      "name": "Get a deployment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-deployment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json,application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments/{{ deployment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1316__",
      "_type": "request",
      "name": "List deployment statuses",
      "description": "Users with pull access can view deployment statuses for a deployment:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-deployment-statuses",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.flash-preview+json,application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments/{{ deployment_id }}/statuses",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1317__",
      "_type": "request",
      "name": "Create a deployment status",
      "description": "Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-deployment-status",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.flash-preview+json,application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments/{{ deployment_id }}/statuses",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1318__",
      "_type": "request",
      "name": "Get a deployment status",
      "description": "Users with pull access can view a deployment status for a deployment:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-deployment-status",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json,application/vnd.github.flash-preview+json,application/vnd.github.ant-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/deployments/{{ deployment_id }}/statuses/{{ status_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1319__",
      "_type": "request",
      "name": "List repository events",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repository-events",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1320__",
      "_type": "request",
      "name": "List forks",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-forks",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/forks",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "newest",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1321__",
      "_type": "request",
      "name": "Create a fork",
      "description": "Create a fork for the authenticated user.\n\n**Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Enterprise Server Support](https://support.github.com/contact?tags=dotcom-rest-api).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-fork",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/forks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1322__",
      "_type": "request",
      "name": "Create a blob",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-blob",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/blobs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1323__",
      "_type": "request",
      "name": "Get a blob",
      "description": "The `content` in the response will always be Base64 encoded.\n\n_Note_: This API supports blobs up to 100 megabytes in size.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-blob",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/blobs/{{ file_sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1324__",
      "_type": "request",
      "name": "Create a commit",
      "description": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-commit",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/commits",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1325__",
      "_type": "request",
      "name": "Get a commit",
      "description": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-commit",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/commits/{{ commit_sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1326__",
      "_type": "request",
      "name": "Create a reference",
      "description": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/refs",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1327__",
      "_type": "request",
      "name": "Get all references",
      "description": "Returns an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`. If there are no references to list, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-single-pull-request) to trigger a merge commit creation. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.18/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\n```\nGET /repos/octocat/Hello-World/git/refs\n```\n\nYou can also request a sub-namespace. For example, to get all the tag references, you can call:\n\n```\nGET /repos/octocat/Hello-World/git/refs/tags\n```\n\nhttps://docs.github.com/enterprise-server@2.18/enterprise/2.18/rest/reference/git#get-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/refs/{{ namespace }}",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1328__",
      "_type": "request",
      "name": "Update a reference",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#update-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/refs/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1329__",
      "_type": "request",
      "name": "Delete a reference",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#delete-a-reference",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/refs/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1330__",
      "_type": "request",
      "name": "Create a tag object",
      "description": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-reference) the tag reference - this call would be unnecessary.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-tag-object",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/tags",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1331__",
      "_type": "request",
      "name": "Get a tag",
      "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-tag",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/tags/{{ tag_sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1332__",
      "_type": "request",
      "name": "Create a tree",
      "description": "The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.\n\nIf you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see \"[Create a commit](https://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-commit)\" and \"[Update a reference](https://docs.github.com/enterprise-server@2.18/rest/reference/git#update-a-reference).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#create-a-tree",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/trees",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_57__",
      "_id": "__REQ_1333__",
      "_type": "request",
      "name": "Get a tree",
      "description": "Returns a single tree using the SHA1 value for that tree.\n\nIf `truncated` is `true` in the response then the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/git#get-a-tree",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/git/trees/{{ tree_sha }}",
      "body": {},
      "parameters": [
        {
          "name": "recursive",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1334__",
      "_type": "request",
      "name": "List repository webhooks",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-webhooks",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1335__",
      "_type": "request",
      "name": "Create a repository webhook",
      "description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can\nshare the same `config` as long as those webhooks do not have any `events` that overlap.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1336__",
      "_type": "request",
      "name": "Get a repository webhook",
      "description": "Returns a webhook configured in a repository. To get only the webhook `config` properties, see \"[Get a webhook configuration for a repository](/rest/reference/repos#get-a-webhook-configuration-for-a-repository).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1337__",
      "_type": "request",
      "name": "Update a repository webhook",
      "description": "Updates a webhook configured in a repository. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for a repository](/rest/reference/repos#update-a-webhook-configuration-for-a-repository).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1338__",
      "_type": "request",
      "name": "Delete a repository webhook",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1339__",
      "_type": "request",
      "name": "Ping a repository webhook",
      "description": "This will trigger a [ping event](https://docs.github.com/enterprise-server@2.18/webhooks/#ping-event) to be sent to the hook.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#ping-a-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}/pings",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1340__",
      "_type": "request",
      "name": "Test the push repository webhook",
      "description": "This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n**Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#test-the-push-repository-webhook",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/hooks/{{ hook_id }}/tests",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1341__",
      "_type": "request",
      "name": "Get a repository installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-a-repository-installation-for-the-authenticated-app",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/installation",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1342__",
      "_type": "request",
      "name": "List repository invitations",
      "description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-invitations",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/invitations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1343__",
      "_type": "request",
      "name": "Update a repository invitation",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-repository-invitation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/invitations/{{ invitation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1344__",
      "_type": "request",
      "name": "Delete a repository invitation",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-repository-invitation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/invitations/{{ invitation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1345__",
      "_type": "request",
      "name": "List repository issues",
      "description": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-repository-issues",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues",
      "body": {},
      "parameters": [
        {
          "name": "milestone",
          "disabled": false
        },
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "assignee",
          "disabled": false
        },
        {
          "name": "creator",
          "disabled": false
        },
        {
          "name": "mentioned",
          "disabled": false
        },
        {
          "name": "labels",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1346__",
      "_type": "request",
      "name": "Create an issue",
      "description": "Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://help.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1347__",
      "_type": "request",
      "name": "List issue comments for a repository",
      "description": "By default, Issue Comments are ordered by ascending ID.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issue-comments-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1348__",
      "_type": "request",
      "name": "Get an issue comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-an-issue-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1349__",
      "_type": "request",
      "name": "Update an issue comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#update-an-issue-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1350__",
      "_type": "request",
      "name": "Delete an issue comment",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#delete-an-issue-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1351__",
      "_type": "request",
      "name": "List reactions for an issue comment",
      "description": "List the reactions to an [issue comment](https://docs.github.com/enterprise-server@2.18/rest/reference/issues#comments).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions#list-reactions-for-an-issue-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1352__",
      "_type": "request",
      "name": "Create reaction for an issue comment",
      "description": "Create a reaction to an [issue comment](https://docs.github.com/enterprise-server@2.18/rest/reference/issues#comments). A response with an HTTP `200` status means that you already added the reaction type to this issue comment.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions#create-reaction-for-an-issue-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1353__",
      "_type": "request",
      "name": "List issue events for a repository",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issue-events-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.starfox-preview+json,application/vnd.github.sailor-v-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1354__",
      "_type": "request",
      "name": "Get an issue event",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-an-issue-event",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.starfox-preview+json,application/vnd.github.sailor-v-preview+json,application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/events/{{ event_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1355__",
      "_type": "request",
      "name": "Get an issue",
      "description": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/enterprise-server@2.18/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-an-issue",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1356__",
      "_type": "request",
      "name": "Update an issue",
      "description": "Issue owners and users with push access can edit an issue.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues/#update-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1357__",
      "_type": "request",
      "name": "Add assignees to an issue",
      "description": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#add-assignees-to-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/assignees",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1358__",
      "_type": "request",
      "name": "Remove assignees from an issue",
      "description": "Removes one or more assignees from an issue.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#remove-assignees-from-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/assignees",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1359__",
      "_type": "request",
      "name": "List issue comments",
      "description": "Issue Comments are ordered by ascending ID.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issue-comments",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1360__",
      "_type": "request",
      "name": "Create an issue comment",
      "description": "This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-an-issue-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1361__",
      "_type": "request",
      "name": "List issue events",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-issue-events",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.starfox-preview+json,application/vnd.github.sailor-v-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1362__",
      "_type": "request",
      "name": "List labels for an issue",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-labels-for-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1363__",
      "_type": "request",
      "name": "Add labels to an issue",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#add-labels-to-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1364__",
      "_type": "request",
      "name": "Set labels for an issue",
      "description": "Removes any previous labels and sets the new labels for an issue.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#set-labels-for-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1365__",
      "_type": "request",
      "name": "Remove all labels from an issue",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#remove-all-labels-from-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1366__",
      "_type": "request",
      "name": "Remove a label from an issue",
      "description": "Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 Not Found` status if the label does not exist.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#remove-a-label-from-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/labels/{{ name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1367__",
      "_type": "request",
      "name": "Lock an issue",
      "description": "Users with push access can lock an issue or pull request's conversation.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#lock-an-issue",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.sailor-v-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/lock",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1368__",
      "_type": "request",
      "name": "Unlock an issue",
      "description": "Users with push access can unlock an issue's conversation.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#unlock-an-issue",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/lock",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1369__",
      "_type": "request",
      "name": "List reactions for an issue",
      "description": "List the reactions to an [issue](https://docs.github.com/enterprise-server@2.18/rest/reference/issues).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions#list-reactions-for-an-issue",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1370__",
      "_type": "request",
      "name": "Create reaction for an issue",
      "description": "Create a reaction to an [issue](https://docs.github.com/enterprise-server@2.18/rest/reference/issues/). A response with an HTTP `200` status means that you already added the reaction type to this issue.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions#create-reaction-for-an-issue",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1371__",
      "_type": "request",
      "name": "List timeline events for an issue",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-timeline-events-for-an-issue",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mockingbird-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/issues/{{ issue_number }}/timeline",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1372__",
      "_type": "request",
      "name": "List deploy keys",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-deploy-keys",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/keys",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1373__",
      "_type": "request",
      "name": "Create a deploy key",
      "description": "You can create a read-only deploy key.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-deploy-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/keys",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1374__",
      "_type": "request",
      "name": "Get a deploy key",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-deploy-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/keys/{{ key_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1375__",
      "_type": "request",
      "name": "Delete a deploy key",
      "description": "Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-deploy-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/keys/{{ key_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1376__",
      "_type": "request",
      "name": "List labels for a repository",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-labels-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/labels",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1377__",
      "_type": "request",
      "name": "Create a label",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-a-label",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/labels",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1378__",
      "_type": "request",
      "name": "Get a label",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-a-label",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/labels/{{ name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1379__",
      "_type": "request",
      "name": "Delete a label",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#delete-a-label",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/labels/{{ name }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1380__",
      "_type": "request",
      "name": "List repository languages",
      "description": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-languages",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/languages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_60__",
      "_id": "__REQ_1381__",
      "_type": "request",
      "name": "Get the license for a repository",
      "description": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/licenses/#get-the-license-for-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/license",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1382__",
      "_type": "request",
      "name": "Merge a branch",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#merge-a-branch",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/merges",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1383__",
      "_type": "request",
      "name": "List milestones",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-milestones",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "due_on",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "asc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1384__",
      "_type": "request",
      "name": "Create a milestone",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1385__",
      "_type": "request",
      "name": "Get a milestone",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#get-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones/{{ milestone_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1386__",
      "_type": "request",
      "name": "Update a milestone",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#update-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones/{{ milestone_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1387__",
      "_type": "request",
      "name": "Delete a milestone",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#delete-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones/{{ milestone_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1388__",
      "_type": "request",
      "name": "List labels for issues in a milestone",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-labels-for-issues-in-a-milestone",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/milestones/{{ milestone_number }}/labels",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1389__",
      "_type": "request",
      "name": "List repository notifications for the authenticated user",
      "description": "List all notifications for the current user.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repository-notifications-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/notifications",
      "body": {},
      "parameters": [
        {
          "name": "all",
          "value": false,
          "disabled": false
        },
        {
          "name": "participating",
          "value": false,
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "before",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1390__",
      "_type": "request",
      "name": "Mark repository notifications as read",
      "description": "Marks all notifications in a repository as \"read\" removes them from the [default view on GitHub Enterprise Server](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub Enterprise Server will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List repository notifications for the authenticated user](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repository-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#mark-repository-notifications-as-read",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/notifications",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1391__",
      "_type": "request",
      "name": "Get a GitHub Enterprise Server Pages site",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-github-pages-site",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1392__",
      "_type": "request",
      "name": "Create a GitHub Pages site",
      "description": "Configures a GitHub Enterprise Server Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-github-pages-site",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.switcheroo-preview+json,application/vnd.github.mister-fantastic-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1393__",
      "_type": "request",
      "name": "Update information about a GitHub Pages site",
      "description": "Updates information for a GitHub Enterprise Server Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-information-about-a-github-pages-site",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mister-fantastic-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1394__",
      "_type": "request",
      "name": "Delete a GitHub Enterprise Server Pages site",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-github-pages-site",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.switcheroo-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1395__",
      "_type": "request",
      "name": "List GitHub Enterprise Server Pages builds",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-github-pages-builds",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages/builds",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1396__",
      "_type": "request",
      "name": "Request a GitHub Enterprise Server Pages build",
      "description": "You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.\n\nBuild requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#request-a-github-pages-build",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages/builds",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1397__",
      "_type": "request",
      "name": "Get latest Pages build",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-latest-pages-build",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages/builds/latest",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1398__",
      "_type": "request",
      "name": "Get GitHub Enterprise Server Pages build",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-github-pages-build",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pages/builds/{{ build_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1399__",
      "_type": "request",
      "name": "List pre-receive hooks for a repository",
      "description": "List all pre-receive hooks that are enabled or testing for this repository as well as any disabled hooks that are allowed to be enabled at the repository level. Pre-receive hooks that are disabled at a higher level and are not configurable will not be listed.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#list-pre-receive-hooks-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pre-receive-hooks",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1400__",
      "_type": "request",
      "name": "Get a pre-receive hook for a repository",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pre-receive-hooks/{{ pre_receive_hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1401__",
      "_type": "request",
      "name": "Update pre-receive hook enforcement for a repository",
      "description": "For pre-receive hooks which are allowed to be configured at the repo level, you can set `enforcement`\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pre-receive-hooks/{{ pre_receive_hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1402__",
      "_type": "request",
      "name": "Remove pre-receive hook enforcement for a repository",
      "description": "Deletes any overridden enforcement on this repository for the specified hook.\n\nResponds with effective values inherited from owner and/or global level.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.eye-scream-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pre-receive-hooks/{{ pre_receive_hook_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1403__",
      "_type": "request",
      "name": "List repository projects",
      "description": "Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-repository-projects",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/projects",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1404__",
      "_type": "request",
      "name": "Create a repository project",
      "description": "Creates a repository project board. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-a-repository-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/projects",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1405__",
      "_type": "request",
      "name": "List pull requests",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.shadow-cat-preview+json,application/vnd.github.sailor-v-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "head",
          "disabled": false
        },
        {
          "name": "base",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1406__",
      "_type": "request",
      "name": "Create a pull request",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud. You can create a new pull request. This endpoint triggers [notifications](https://docs.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" for details.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#create-a-pull-request",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.shadow-cat-preview+json,application/vnd.github.sailor-v-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1407__",
      "_type": "request",
      "name": "List review comments in a repository",
      "description": "Lists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-review-comments-in-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.comfort-fade-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1408__",
      "_type": "request",
      "name": "Get a review comment for a pull request",
      "description": "Provides details for a review comment.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-review-comment-for-a-pull-request",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.comfort-fade-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1409__",
      "_type": "request",
      "name": "Update a review comment for a pull request",
      "description": "Enables you to edit a review comment.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#update-a-review-comment-for-a-pull-request",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.comfort-fade-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1410__",
      "_type": "request",
      "name": "Delete a review comment for a pull request",
      "description": "Deletes a review comment.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#delete-a-review-comment-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1411__",
      "_type": "request",
      "name": "List reactions for a pull request review comment",
      "description": "List the reactions to a [pull request review comment](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#review-comments).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions#list-reactions-for-a-pull-request-review-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1412__",
      "_type": "request",
      "name": "Create reaction for a pull request review comment",
      "description": "Create a reaction to a [pull request review comment](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#comments). A response with an HTTP `200` status means that you already added the reaction type to this pull request review comment.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions#create-reaction-for-a-pull-request-review-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/comments/{{ comment_id }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1413__",
      "_type": "request",
      "name": "Get a pull request",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#update-a-pull-request) a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.18/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1414__",
      "_type": "request",
      "name": "Update a pull request",
      "description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls/#update-a-pull-request",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.shadow-cat-preview+json,application/vnd.github.sailor-v-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1415__",
      "_type": "request",
      "name": "List review comments on a pull request",
      "description": "Lists all review comments for a pull request. By default, review comments are in ascending order by ID.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-review-comments-on-a-pull-request",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.comfort-fade-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1416__",
      "_type": "request",
      "name": "Create a review comment for a pull request (alternative)",
      "description": "Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"[Create an issue comment](https://docs.github.com/enterprise-server@2.18/rest/reference/issues#create-an-issue-comment).\"\n\n**Note:** The position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" for details.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#create-a-review-comment-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1417__",
      "_type": "request",
      "name": "Create a reply for a review comment",
      "description": "Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#create-a-reply-for-a-review-comment",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/comments/{{ comment_id }}/replies",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1418__",
      "_type": "request",
      "name": "List commits on a pull request",
      "description": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-commits) endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-commits-on-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/commits",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1419__",
      "_type": "request",
      "name": "List pull requests files",
      "description": "**Note:** Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests-files",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/files",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1420__",
      "_type": "request",
      "name": "Check if a pull request has been merged",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#check-if-a-pull-request-has-been-merged",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/merge",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1421__",
      "_type": "request",
      "name": "Merge a pull request",
      "description": "undefined\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#merge-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/merge",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1422__",
      "_type": "request",
      "name": "List requested reviewers for a pull request",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-requested-reviewers-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/requested_reviewers",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1423__",
      "_type": "request",
      "name": "Request reviewers for a pull request",
      "description": "undefined\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#request-reviewers-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/requested_reviewers",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1424__",
      "_type": "request",
      "name": "Remove requested reviewers from a pull request",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#remove-requested-reviewers-from-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/requested_reviewers",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1425__",
      "_type": "request",
      "name": "List reviews for a pull request",
      "description": "The list of reviews returns in chronological order.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-reviews-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1426__",
      "_type": "request",
      "name": "Create a review for a pull request",
      "description": "This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\nPull request reviews created in the `PENDING` state do not include the `submitted_at` property in the response.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#create-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1427__",
      "_type": "request",
      "name": "Get a review for a pull request",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#get-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1428__",
      "_type": "request",
      "name": "Update a review for a pull request",
      "description": "Update the review summary comment with new text.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#update-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1429__",
      "_type": "request",
      "name": "Delete a pending review for a pull request",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#delete-a-pending-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1430__",
      "_type": "request",
      "name": "List comments for a pull request review",
      "description": "List comments for a specific pull request review.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-comments-for-a-pull-request-review",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1431__",
      "_type": "request",
      "name": "Dismiss a review for a pull request",
      "description": "**Note:** To dismiss a pull request review on a [protected branch](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#branches), you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#dismiss-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}/dismissals",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1432__",
      "_type": "request",
      "name": "Submit a review for a pull request",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#submit-a-review-for-a-pull-request",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/reviews/{{ review_id }}/events",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_66__",
      "_id": "__REQ_1433__",
      "_type": "request",
      "name": "Update a pull request branch",
      "description": "Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/pulls#update-a-pull-request-branch",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.lydian-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/pulls/{{ pull_number }}/update-branch",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1434__",
      "_type": "request",
      "name": "Get a repository README",
      "description": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository-readme",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/readme",
      "body": {},
      "parameters": [
        {
          "name": "ref",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1435__",
      "_type": "request",
      "name": "Get a repository README for a directory",
      "description": "Gets the README from a repository directory.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository-directory-readme",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/readme/{{ dir }}",
      "body": {},
      "parameters": [
        {
          "name": "ref",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1436__",
      "_type": "request",
      "name": "List releases",
      "description": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-releases",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1437__",
      "_type": "request",
      "name": "Create a release",
      "description": "Users with push access to the repository can create a release.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1438__",
      "_type": "request",
      "name": "Get a release asset",
      "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-release-asset",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/assets/{{ asset_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1439__",
      "_type": "request",
      "name": "Update a release asset",
      "description": "Users with push access to the repository can edit a release asset.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-release-asset",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/assets/{{ asset_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1440__",
      "_type": "request",
      "name": "Delete a release asset",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-release-asset",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/assets/{{ asset_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1441__",
      "_type": "request",
      "name": "Get the latest release",
      "description": "View the latest published full release for the repository.\n\nThe latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-latest-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/latest",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1442__",
      "_type": "request",
      "name": "Get a release by tag name",
      "description": "Get a published release with the specified tag.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-release-by-tag-name",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/tags/{{ tag }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1443__",
      "_type": "request",
      "name": "Get a release",
      "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1444__",
      "_type": "request",
      "name": "Update a release",
      "description": "Users with push access to the repository can edit a release.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#update-a-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1445__",
      "_type": "request",
      "name": "Delete a release",
      "description": "Users with push access to the repository can delete a release.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#delete-a-release",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1446__",
      "_type": "request",
      "name": "List release assets",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-release-assets",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}/assets",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1447__",
      "_type": "request",
      "name": "Upload a release asset",
      "description": "This endpoint makes use of [a Hypermedia relation](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#hypermedia) to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the `upload_url` returned in\nthe response of the [Create a release endpoint](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-release) to upload a release asset.\n\nYou need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nMost libraries will set the required `Content-Length` header automatically. Use the required `Content-Type` header to provide the media type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml). For example: \n\n`application/zip`\n\nGitHub Enterprise Server expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,\nyou'll still need to pass your authentication to be able to upload an asset.\n\nWhen an upstream failure occurs, you will receive a `502 Bad Gateway` status. This may leave an empty asset with a state of `starter`. It can be safely deleted.\n\n**Notes:**\n*   GitHub Enterprise Server renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The \"[List assets for a release](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-assets-for-a-release)\"\nendpoint lists the renamed filenames. For more information and help, contact [GitHub Enterprise Server Support](https://support.github.com/contact?tags=dotcom-rest-api).\n*   If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#upload-a-release-asset",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/releases/{{ release_id }}/assets",
      "body": {},
      "parameters": [
        {
          "name": "name",
          "disabled": false
        },
        {
          "name": "label",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1448__",
      "_type": "request",
      "name": "List stargazers",
      "description": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) via the `Accept` header:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-stargazers",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stargazers",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1449__",
      "_type": "request",
      "name": "Get the weekly commit activity",
      "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-weekly-commit-activity",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/code_frequency",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1450__",
      "_type": "request",
      "name": "Get the last year of commit activity",
      "description": "Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-last-year-of-commit-activity",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/commit_activity",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1451__",
      "_type": "request",
      "name": "Get all contributor commit activity",
      "description": "\nReturns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:\n\n*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-all-contributor-commit-activity",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/contributors",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1452__",
      "_type": "request",
      "name": "Get the weekly commit count",
      "description": "Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.\n\nThe array order is oldest week (index 0) to most recent week.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-weekly-commit-count",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/participation",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1453__",
      "_type": "request",
      "name": "Get the hourly commit count for each day",
      "description": "Each array contains the day number, hour number, and number of commits:\n\n*   `0-6`: Sunday - Saturday\n*   `0-23`: Hour of day\n*   Number of commits\n\nFor example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-the-hourly-commit-count-for-each-day",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/stats/punch_card",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1454__",
      "_type": "request",
      "name": "Create a commit status",
      "description": "Users with push access in a repository can create commit statuses for a given SHA.\n\nNote: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-commit-status",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/statuses/{{ sha }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1455__",
      "_type": "request",
      "name": "List watchers",
      "description": "Lists the people watching the specified repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-watchers",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/subscribers",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1456__",
      "_type": "request",
      "name": "Get a repository subscription",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#get-a-repository-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1457__",
      "_type": "request",
      "name": "Set a repository subscription",
      "description": "If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made within a repository, set `ignored` to `true`. If you would like to stop watching a repository, [delete the repository's subscription](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-repository-subscription) completely.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-repository-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1458__",
      "_type": "request",
      "name": "Delete a repository subscription",
      "description": "This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](https://docs.github.com/enterprise-server@2.18/rest/reference/activity#set-a-repository-subscription).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#delete-a-repository-subscription",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/subscription",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1459__",
      "_type": "request",
      "name": "List repository tags",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-tags",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/tags",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1460__",
      "_type": "request",
      "name": "Download a repository archive (tar)",
      "description": "Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#download-a-repository-archive",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/tarball/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1461__",
      "_type": "request",
      "name": "List repository teams",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-teams",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/teams",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1462__",
      "_type": "request",
      "name": "Get all repository topics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-all-repository-topics",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mercy-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/topics",
      "body": {},
      "parameters": [
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1463__",
      "_type": "request",
      "name": "Replace all repository topics",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#replace-all-repository-topics",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mercy-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/topics",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1464__",
      "_type": "request",
      "name": "Transfer a repository",
      "description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#transfer-a-repository",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/transfer",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1465__",
      "_type": "request",
      "name": "Download a repository archive (zip)",
      "description": "Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#download-a-repository-archive",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repos/{{ owner }}/{{ repo }}/zipball/{{ ref }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1466__",
      "_type": "request",
      "name": "Create a repository using a template",
      "description": "Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://docs.github.com/enterprise-server@2.18/rest/reference/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n*   `repo` scope to create a private repository\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-using-a-template",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.baptiste-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/repos/{{ template_owner }}/{{ template_repo }}/generate",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1467__",
      "_type": "request",
      "name": "List public repositories",
      "description": "Lists all public repositories in the order that they were created.\n\nNote:\n- For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n- Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-public-repositories",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/repositories",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "visibility",
          "value": "public",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_70__",
      "_id": "__REQ_1468__",
      "_type": "request",
      "name": "Search code",
      "description": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/search#search-code",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/search/code",
      "body": {},
      "parameters": [
        {
          "name": "q",
          "disabled": false
        },
        {
          "name": "sort",
          "disabled": false
        },
        {
          "name": "order",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_70__",
      "_id": "__REQ_1469__",
      "_type": "request",
      "name": "Search commits",
      "description": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/search#search-commits",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.cloak-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/search/commits",
      "body": {},
      "parameters": [
        {
          "name": "q",
          "disabled": false
        },
        {
          "name": "sort",
          "disabled": false
        },
        {
          "name": "order",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_70__",
      "_id": "__REQ_1470__",
      "_type": "request",
      "name": "Search issues and pull requests",
      "description": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.\n\n**Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see \"[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/search#search-issues-and-pull-requests",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/search/issues",
      "body": {},
      "parameters": [
        {
          "name": "q",
          "disabled": false
        },
        {
          "name": "sort",
          "disabled": false
        },
        {
          "name": "order",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_70__",
      "_id": "__REQ_1471__",
      "_type": "request",
      "name": "Search labels",
      "description": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/search#search-labels",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/search/labels",
      "body": {},
      "parameters": [
        {
          "name": "repository_id",
          "disabled": false
        },
        {
          "name": "q",
          "disabled": false
        },
        {
          "name": "sort",
          "disabled": false
        },
        {
          "name": "order",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_70__",
      "_id": "__REQ_1472__",
      "_type": "request",
      "name": "Search repositories",
      "description": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/search#search-repositories",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mercy-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/search/repositories",
      "body": {},
      "parameters": [
        {
          "name": "q",
          "disabled": false
        },
        {
          "name": "sort",
          "disabled": false
        },
        {
          "name": "order",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_70__",
      "_id": "__REQ_1473__",
      "_type": "request",
      "name": "Search topics",
      "description": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/search#search-topics",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.mercy-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/search/topics",
      "body": {},
      "parameters": [
        {
          "name": "q",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_70__",
      "_id": "__REQ_1474__",
      "_type": "request",
      "name": "Search users",
      "description": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.18/rest/reference/search#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/search#search-users",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/search/users",
      "body": {},
      "parameters": [
        {
          "name": "q",
          "disabled": false
        },
        {
          "name": "sort",
          "disabled": false
        },
        {
          "name": "order",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1475__",
      "_type": "request",
      "name": "Get the configuration status",
      "description": "This endpoint allows you to check the status of the most recent configuration process:\n\nNote that you may need to wait several seconds after you start a process before you can check its status.\n\nThe different statuses are:\n\n| Status        | Description                       |\n| ------------- | --------------------------------- |\n| `PENDING`     | The job has not started yet       |\n| `CONFIGURING` | The job is running                |\n| `DONE`        | The job has finished correctly    |\n| `FAILED`      | The job has finished unexpectedly |\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-the-configuration-status",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/setup/api/configcheck",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1476__",
      "_type": "request",
      "name": "Start a configuration process",
      "description": "This endpoint allows you to start a configuration process at any time for your updated settings to take effect:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#start-a-configuration-process",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/setup/api/configure",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1477__",
      "_type": "request",
      "name": "Get the maintenance status",
      "description": "Check your installation's maintenance status:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-the-maintenance-status",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/setup/api/maintenance",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1478__",
      "_type": "request",
      "name": "Enable or disable maintenance mode",
      "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#enable-or-disable-maintenance-mode",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/setup/api/maintenance",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1479__",
      "_type": "request",
      "name": "Get settings",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/setup/api/settings",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1480__",
      "_type": "request",
      "name": "Set settings",
      "description": "For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-settings).\n\n**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#set-settings",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/setup/api/settings",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1481__",
      "_type": "request",
      "name": "Get all authorized SSH keys",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#get-all-authorized-ssh-keys",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/setup/api/settings/authorized-keys",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1482__",
      "_type": "request",
      "name": "Add an authorized SSH key",
      "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#add-an-authorized-ssh-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/setup/api/settings/authorized-keys",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1483__",
      "_type": "request",
      "name": "Remove an authorized SSH key",
      "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#remove-an-authorized-ssh-key",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/setup/api/settings/authorized-keys",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1484__",
      "_type": "request",
      "name": "Create a GitHub license",
      "description": "When you boot a GitHub instance for the first time, you can use the following endpoint to upload a license.\n\nNote that you need to `POST` to [`/setup/api/configure`](https://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#start-a-configuration-process) to start the actual configuration process.\n\nWhen using this endpoint, your GitHub instance must have a password set. This can be accomplished two ways:\n\n1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.\n2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.\n\n**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#create-a-github-enterprise-server-license",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/setup/api/start",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1485__",
      "_type": "request",
      "name": "Upgrade a license",
      "description": "This API upgrades your license and also triggers the configuration process.\n\n**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#upgrade-a-license",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/setup/api/upgrade",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1486__",
      "_type": "request",
      "name": "Get a team",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#get-a-team",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1487__",
      "_type": "request",
      "name": "Update a team",
      "description": "To edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n**Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#update-a-team",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/teams/{{ team_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1488__",
      "_type": "request",
      "name": "Delete a team",
      "description": "To delete a team, the authenticated user must be an organization owner or team maintainer.\n\nIf you are an organization owner and you pass the `hellcat-preview` media type, deleting a parent team will delete all of its child teams as well.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#delete-a-team",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/teams/{{ team_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1489__",
      "_type": "request",
      "name": "List discussions",
      "description": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-discussions",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions",
      "body": {},
      "parameters": [
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1490__",
      "_type": "request",
      "name": "Create a discussion",
      "description": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" for details.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#create-a-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1491__",
      "_type": "request",
      "name": "Get a discussion",
      "description": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-a-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1492__",
      "_type": "request",
      "name": "Update a discussion",
      "description": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#update-a-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1493__",
      "_type": "request",
      "name": "Delete a discussion",
      "description": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#delete-a-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1494__",
      "_type": "request",
      "name": "List discussion comments",
      "description": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-discussion-comments",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}/comments",
      "body": {},
      "parameters": [
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1495__",
      "_type": "request",
      "name": "Create a discussion comment",
      "description": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" for details.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#create-a-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}/comments",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1496__",
      "_type": "request",
      "name": "Get a discussion comment",
      "description": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-a-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1497__",
      "_type": "request",
      "name": "Update a discussion comment",
      "description": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#update-a-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1498__",
      "_type": "request",
      "name": "Delete a discussion comment",
      "description": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#delete-a-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1499__",
      "_type": "request",
      "name": "List reactions for a team discussion comment",
      "description": "List the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions/#list-reactions-for-a-team-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1500__",
      "_type": "request",
      "name": "Create reaction for a team discussion comment",
      "description": "Create a reaction to a [team discussion comment](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion comment.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions/#create-reaction-for-a-team-discussion-comment",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}/comments/{{ comment_number }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1501__",
      "_type": "request",
      "name": "List reactions for a team discussion",
      "description": "List the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions/#list-reactions-for-a-team-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}/reactions",
      "body": {},
      "parameters": [
        {
          "name": "content",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_68__",
      "_id": "__REQ_1502__",
      "_type": "request",
      "name": "Create reaction for a team discussion",
      "description": "Create a reaction to a [team discussion](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/reactions/#create-reaction-for-a-team-discussion",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.echo-preview+json,application/vnd.github.squirrel-girl-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/discussions/{{ discussion_number }}/reactions",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1503__",
      "_type": "request",
      "name": "List team members",
      "description": "If you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo list members in a team, the team must be visible to the authenticated user.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-team-members",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/members",
      "body": {},
      "parameters": [
        {
          "name": "role",
          "value": "all",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1504__",
      "_type": "request",
      "name": "Get team member (Legacy)",
      "description": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-team-member-legacy",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1505__",
      "_type": "request",
      "name": "Add team member (Legacy)",
      "description": "The \"Add team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Add or update team membership for a user](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#add-or-update-team-membership-for-a-user) endpoint instead. It allows you to invite new organization members to your teams.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they're changing. The person being added to the team must be a member of the team's organization.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#add-team-member-legacy",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1506__",
      "_type": "request",
      "name": "Remove team member (Legacy)",
      "description": "The \"Remove team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Remove team membership for a user](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#remove-team-membership-for-a-user) endpoint instead. It allows you to remove both active and pending memberships.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#remove-team-member-legacy",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/members/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1507__",
      "_type": "request",
      "name": "Get team membership for a user",
      "description": "If you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/enterprise-server@2.18/rest/reference/teams#create-a-team).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#get-team-membership-for-a-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1508__",
      "_type": "request",
      "name": "Add or update team membership for a user",
      "description": "If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#add-or-update-team-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1509__",
      "_type": "request",
      "name": "Remove team membership for a user",
      "description": "To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#remove-team-membership-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/memberships/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1510__",
      "_type": "request",
      "name": "List team projects",
      "description": "Lists the organization projects for a team. If you are an [authenticated](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#authentication) site administrator for your Enterprise instance, you will be able to list all projects for the team. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#list-team-projects",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json,application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/projects",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1511__",
      "_type": "request",
      "name": "Check team permissions for a project",
      "description": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#check-team-permissions-for-a-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json,application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1512__",
      "_type": "request",
      "name": "Add or update team project permissions",
      "description": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#add-or-update-team-project-permissions",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json,application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1513__",
      "_type": "request",
      "name": "Remove a project from a team",
      "description": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#remove-a-project-from-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/projects/{{ project_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1514__",
      "_type": "request",
      "name": "List team repositories",
      "description": "**Note**: If you pass the `hellcat-preview` media type, the response will include any repositories inherited through a parent team.\n\nIf you are an [authenticated](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#authentication) site administrator for your Enterprise instance, you will be able to list all repositories for the team.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#list-team-repositories",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/repos",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1515__",
      "_type": "request",
      "name": "Check team permissions for a repository",
      "description": "**Note**: If you pass the `hellcat-preview` media type, repositories inherited through a parent team will be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) via the `Accept` header:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#check-team-permissions-for-a-repository",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1516__",
      "_type": "request",
      "name": "Add or update team repository permissions",
      "description": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#add-or-update-team-repository-permissions",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1517__",
      "_type": "request",
      "name": "Remove a repository from a team",
      "description": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#remove-a-repository-from-a-team",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/repos/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1518__",
      "_type": "request",
      "name": "List child teams",
      "description": "You must use the `hellcat-preview` media type to use this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams/#list-child-teams",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.hellcat-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/teams/{{ team_id }}/teams",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1519__",
      "_type": "request",
      "name": "Get the authenticated user",
      "description": "If the authenticated user is authenticated through basic authentication or OAuth with the `user` scope, then the response lists public and private profile information.\n\nIf the authenticated user is authenticated through OAuth without the `user` scope, then the response lists only public profile information.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#get-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1520__",
      "_type": "request",
      "name": "Update the authenticated user",
      "description": "**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users/#update-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/user",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1521__",
      "_type": "request",
      "name": "List email addresses for the authenticated user",
      "description": "Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the `user:email` scope.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-email-addresses-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/emails",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1522__",
      "_type": "request",
      "name": "Add an email address for the authenticated user",
      "description": "This endpoint is accessible with the `user` scope.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#add-an-email-address-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/user/emails",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1523__",
      "_type": "request",
      "name": "Delete an email address for the authenticated user",
      "description": "This endpoint is accessible with the `user` scope.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#delete-an-email-address-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/user/emails",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1524__",
      "_type": "request",
      "name": "List followers of the authenticated user",
      "description": "Lists the people following the authenticated user.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-followers-of-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/followers",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1525__",
      "_type": "request",
      "name": "List the people the authenticated user follows",
      "description": "Lists the people who the authenticated user follows.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-the-people-the-authenticated-user-follows",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/following",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1526__",
      "_type": "request",
      "name": "Check if a person is followed by the authenticated user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#check-if-a-person-is-followed-by-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/following/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1527__",
      "_type": "request",
      "name": "Follow a user",
      "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nFollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#follow-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/user/following/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1528__",
      "_type": "request",
      "name": "Unfollow a user",
      "description": "Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#unfollow-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/user/following/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1529__",
      "_type": "request",
      "name": "List GPG keys for the authenticated user",
      "description": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-gpg-keys-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/gpg_keys",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1530__",
      "_type": "request",
      "name": "Create a GPG key for the authenticated user",
      "description": "Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#create-a-gpg-key-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/user/gpg_keys",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1531__",
      "_type": "request",
      "name": "Get a GPG key for the authenticated user",
      "description": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#get-a-gpg-key-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/gpg_keys/{{ gpg_key_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1532__",
      "_type": "request",
      "name": "Delete a GPG key for the authenticated user",
      "description": "Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:gpg_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#delete-a-gpg-key-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/user/gpg_keys/{{ gpg_key_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1533__",
      "_type": "request",
      "name": "List app installations accessible to the user access token",
      "description": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-app-installations-accessible-to-the-user-access-token",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/installations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1534__",
      "_type": "request",
      "name": "List repositories accessible to the user access token",
      "description": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#list-repositories-accessible-to-the-user-access-token",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json,application/vnd.github.mercy-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/installations/{{ installation_id }}/repositories",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1535__",
      "_type": "request",
      "name": "Add a repository to an app installation",
      "description": "Add a single repository to an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://docs.github.com/enterprise-server@2.18/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#add-a-repository-to-an-app-installation",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/user/installations/{{ installation_id }}/repositories/{{ repository_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1536__",
      "_type": "request",
      "name": "Remove a repository from an app installation",
      "description": "Remove a single repository from an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://docs.github.com/enterprise-server@2.18/github/authenticating-to-github/creating-a-personal-access-token) or [Basic Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/other-authentication-methods#basic-authentication)) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#remove-a-repository-from-an-app-installation",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/user/installations/{{ installation_id }}/repositories/{{ repository_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_59__",
      "_id": "__REQ_1537__",
      "_type": "request",
      "name": "List user account issues assigned to the authenticated user",
      "description": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.18/rest/reference/pulls#list-pull-requests)\" endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/issues#list-user-account-issues-assigned-to-the-authenticated-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/issues",
      "body": {},
      "parameters": [
        {
          "name": "filter",
          "value": "assigned",
          "disabled": false
        },
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "labels",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1538__",
      "_type": "request",
      "name": "List public SSH keys for the authenticated user",
      "description": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-public-ssh-keys-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/keys",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1539__",
      "_type": "request",
      "name": "Create a public SSH key for the authenticated user",
      "description": "Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:public_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#create-a-public-ssh-key-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/user/keys",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1540__",
      "_type": "request",
      "name": "Get a public SSH key for the authenticated user",
      "description": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#get-a-public-ssh-key-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/keys/{{ key_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1541__",
      "_type": "request",
      "name": "Delete a public SSH key for the authenticated user",
      "description": "Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:public_key` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#delete-a-public-ssh-key-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/user/keys/{{ key_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1542__",
      "_type": "request",
      "name": "List organization memberships for the authenticated user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organization-memberships-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/memberships/orgs",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1543__",
      "_type": "request",
      "name": "Get an organization membership for the authenticated user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#get-an-organization-membership-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/memberships/orgs/{{ org }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1544__",
      "_type": "request",
      "name": "Update an organization membership for the authenticated user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#update-an-organization-membership-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/user/memberships/orgs/{{ org }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1545__",
      "_type": "request",
      "name": "List organizations for the authenticated user",
      "description": "List organizations for the authenticated user.\n\n**OAuth scope requirements**\n\nThis only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organizations-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/orgs",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1546__",
      "_type": "request",
      "name": "Create a user project",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#create-a-user-project",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/user/projects",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1547__",
      "_type": "request",
      "name": "List public email addresses for the authenticated user",
      "description": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/enterprise-server@2.18/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-public-email-addresses-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/public_emails",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1548__",
      "_type": "request",
      "name": "List repositories for the authenticated user",
      "description": "Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repositories-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/repos",
      "body": {},
      "parameters": [
        {
          "name": "visibility",
          "value": "all",
          "disabled": false
        },
        {
          "name": "affiliation",
          "value": "owner,collaborator,organization_member",
          "disabled": false
        },
        {
          "name": "type",
          "value": "all",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "full_name",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        },
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "before",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1549__",
      "_type": "request",
      "name": "Create a repository for the authenticated user",
      "description": "Creates a new repository for the authenticated user.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n*   `repo` scope to create a private repository.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#create-a-repository-for-the-authenticated-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json,application/vnd.github.baptiste-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "POST",
      "url": "{{ github_api_root }}/user/repos",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1550__",
      "_type": "request",
      "name": "List repository invitations for the authenticated user",
      "description": "When authenticating as a user, this endpoint will list all currently open repository invitations for that user.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repository-invitations-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/repository_invitations",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1551__",
      "_type": "request",
      "name": "Accept a repository invitation",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#accept-a-repository-invitation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PATCH",
      "url": "{{ github_api_root }}/user/repository_invitations/{{ invitation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1552__",
      "_type": "request",
      "name": "Decline a repository invitation",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#decline-a-repository-invitation",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/user/repository_invitations/{{ invitation_id }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1553__",
      "_type": "request",
      "name": "List repositories starred by the authenticated user",
      "description": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) via the `Accept` header:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repositories-starred-by-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/starred",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1554__",
      "_type": "request",
      "name": "Check if a repository is starred by the authenticated user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#check-if-a-repository-is-starred-by-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/starred/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1555__",
      "_type": "request",
      "name": "Star a repository for the authenticated user",
      "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#star-a-repository-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/user/starred/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1556__",
      "_type": "request",
      "name": "Unstar a repository for the authenticated user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#unstar-a-repository-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/user/starred/{{ owner }}/{{ repo }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1557__",
      "_type": "request",
      "name": "List repositories watched by the authenticated user",
      "description": "Lists repositories the authenticated user is watching.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repositories-watched-by-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/subscriptions",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_71__",
      "_id": "__REQ_1558__",
      "_type": "request",
      "name": "List teams for the authenticated user",
      "description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/enterprise-server@2.18/apps/building-oauth-apps/).\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/teams#list-teams-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/user/teams",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1559__",
      "_type": "request",
      "name": "List users",
      "description": "Lists all users, in the order that they signed up on GitHub Enterprise Server. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-users",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1560__",
      "_type": "request",
      "name": "Get a user",
      "description": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub Enterprise Server plan information' below\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub Enterprise Server [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see [Authentication](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/enterprise-server@2.18/rest/reference/users#emails)\".\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#get-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1561__",
      "_type": "request",
      "name": "List events for the authenticated user",
      "description": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-events-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1562__",
      "_type": "request",
      "name": "List organization events for the authenticated user",
      "description": "This is the user's organization dashboard. You must be authenticated as the user to view this.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-organization-events-for-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/events/orgs/{{ org }}",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1563__",
      "_type": "request",
      "name": "List public events for a user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-events-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/events/public",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1564__",
      "_type": "request",
      "name": "List followers of a user",
      "description": "Lists the people following the specified user.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-followers-of-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/followers",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1565__",
      "_type": "request",
      "name": "List the people a user follows",
      "description": "Lists the people who the specified user follows.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-the-people-a-user-follows",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/following",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1566__",
      "_type": "request",
      "name": "Check if a user follows another user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#check-if-a-user-follows-another-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/following/{{ target_user }}",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_56__",
      "_id": "__REQ_1567__",
      "_type": "request",
      "name": "List gists for a user",
      "description": "Lists public gists for the specified user:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/gists#list-gists-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/gists",
      "body": {},
      "parameters": [
        {
          "name": "since",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1568__",
      "_type": "request",
      "name": "List GPG keys for a user",
      "description": "Lists the GPG keys for a user. This information is accessible by anyone.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-gpg-keys-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/gpg_keys",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1569__",
      "_type": "request",
      "name": "Get contextual information for a user",
      "description": "Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.\n\nThe `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:\n\n```shell\n curl -u username:token\n  https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192\n```\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#get-contextual-information-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/hovercard",
      "body": {},
      "parameters": [
        {
          "name": "subject_type",
          "disabled": false
        },
        {
          "name": "subject_id",
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_51__",
      "_id": "__REQ_1570__",
      "_type": "request",
      "name": "Get a user installation for the authenticated app",
      "description": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.18/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/apps#get-a-user-installation-for-the-authenticated-app",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.machine-man-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/installation",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_72__",
      "_id": "__REQ_1571__",
      "_type": "request",
      "name": "List public keys for a user",
      "description": "Lists the _verified_ public SSH keys for a user. This is accessible by anyone.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/users#list-public-keys-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/keys",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_64__",
      "_id": "__REQ_1572__",
      "_type": "request",
      "name": "List organizations for a user",
      "description": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/orgs#list-organizations-for-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/orgs",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_65__",
      "_id": "__REQ_1573__",
      "_type": "request",
      "name": "List user projects",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/projects#list-user-projects",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.inertia-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/projects",
      "body": {},
      "parameters": [
        {
          "name": "state",
          "value": "open",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1574__",
      "_type": "request",
      "name": "List events received by the authenticated user",
      "description": "These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-events-received-by-the-authenticated-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/received_events",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1575__",
      "_type": "request",
      "name": "List public events received by a user",
      "description": "\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-public-events-received-by-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/received_events/public",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_69__",
      "_id": "__REQ_1576__",
      "_type": "request",
      "name": "List repositories for a user",
      "description": "Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for the specified user.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/repos#list-repositories-for-a-user",
      "headers": [
        {
          "name": "Accept",
          "value": "application/vnd.github.nebula-preview+json"
        }
      ],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/repos",
      "body": {},
      "parameters": [
        {
          "name": "type",
          "value": "owner",
          "disabled": false
        },
        {
          "name": "sort",
          "value": "full_name",
          "disabled": false
        },
        {
          "name": "direction",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1577__",
      "_type": "request",
      "name": "Promote a user to be a site administrator",
      "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#promote-a-user-to-be-a-site-administrator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/users/{{ username }}/site_admin",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1578__",
      "_type": "request",
      "name": "Demote a site administrator",
      "description": "You can demote any user account except your own.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#demote-a-site-administrator",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/users/{{ username }}/site_admin",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1579__",
      "_type": "request",
      "name": "List repositories starred by a user",
      "description": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.18/rest/overview/media-types/) via the `Accept` header:\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repositories-starred-by-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/starred",
      "body": {},
      "parameters": [
        {
          "name": "sort",
          "value": "created",
          "disabled": false
        },
        {
          "name": "direction",
          "value": "desc",
          "disabled": false
        },
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_50__",
      "_id": "__REQ_1580__",
      "_type": "request",
      "name": "List repositories watched by a user",
      "description": "Lists repositories a user is watching.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/activity#list-repositories-watched-by-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/users/{{ username }}/subscriptions",
      "body": {},
      "parameters": [
        {
          "name": "per_page",
          "value": 30,
          "disabled": false
        },
        {
          "name": "page",
          "value": 1,
          "disabled": false
        }
      ]
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1581__",
      "_type": "request",
      "name": "Suspend a user",
      "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.\n\nYou can suspend any user account except your own.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.18/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#suspend-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "PUT",
      "url": "{{ github_api_root }}/users/{{ username }}/suspended",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_55__",
      "_id": "__REQ_1582__",
      "_type": "request",
      "name": "Unsuspend a user",
      "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.\n\nhttps://docs.github.com/enterprise-server@2.18/rest/reference/enterprise-admin#unsuspend-a-user",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "DELETE",
      "url": "{{ github_api_root }}/users/{{ username }}/suspended",
      "body": {},
      "parameters": []
    },
    {
      "parentId": "__FLD_62__",
      "_id": "__REQ_1583__",
      "_type": "request",
      "name": "Get the Zen of GitHub",
      "description": "",
      "headers": [],
      "authentication": {
        "token": "{{ github_token }}",
        "type": "bearer"
      },
      "method": "GET",
      "url": "{{ github_api_root }}/zen",
      "body": {},
      "parameters": []
    }
  ]
}